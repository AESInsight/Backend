using Microsoft.EntityFrameworkCore.Migrations;
using System.Diagnostics.CodeAnalysis;

#nullable disable

namespace Backend.Migrations
{
    /// <inheritdoc />
    [ExcludeFromCodeCoverage]
    public partial class AddIndustryToCompany : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddColumn<string>(
                name: "Industry",
                table: "Company",
                type: "longtext",
                nullable: false)
                .Annotation("MySql:CharSet", "utf8mb4");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "UserId",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 39, 99, 148, 185, 57, 129, 240, 206, 39, 18, 122, 154, 148, 1, 22, 7, 106, 253, 254, 85, 140, 61, 116, 27, 30, 128, 49, 112, 116, 244, 215, 159, 33, 212, 196, 24, 87, 43, 77, 65, 40, 160, 187, 12, 27, 62, 108, 155, 203, 236, 137, 93, 120, 149, 110, 16, 194, 7, 169, 188, 26, 42, 199, 245 }, new byte[] { 91, 91, 79, 229, 160, 70, 179, 57, 223, 227, 196, 245, 173, 246, 160, 99, 176, 78, 213, 11, 26, 181, 251, 198, 71, 171, 124, 155, 38, 10, 62, 8, 14, 97, 19, 74, 34, 67, 157, 89, 91, 83, 135, 74, 65, 33, 75, 31, 53, 23, 223, 180, 83, 193, 25, 125, 22, 173, 238, 39, 10, 144, 123, 202, 67, 248, 47, 164, 14, 227, 147, 136, 105, 69, 152, 217, 168, 94, 47, 252, 191, 61, 94, 141, 38, 16, 57, 9, 148, 108, 105, 175, 134, 150, 252, 192, 173, 89, 100, 93, 77, 170, 108, 28, 182, 215, 58, 0, 3, 145, 28, 1, 158, 164, 221, 200, 66, 70, 125, 175, 240, 88, 185, 43, 211, 169, 65, 159 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "UserId",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 30, 179, 124, 61, 233, 105, 23, 115, 13, 189, 21, 74, 212, 149, 85, 158, 21, 29, 218, 77, 27, 229, 52, 137, 250, 174, 221, 119, 245, 46, 83, 90, 1, 225, 112, 170, 8, 99, 92, 210, 244, 42, 120, 178, 21, 1, 103, 66, 184, 17, 143, 36, 167, 104, 163, 154, 87, 146, 226, 237, 88, 175, 128, 245 }, new byte[] { 81, 56, 168, 247, 4, 252, 91, 185, 31, 189, 94, 198, 166, 234, 162, 210, 84, 67, 105, 145, 189, 146, 166, 161, 156, 206, 80, 67, 56, 164, 109, 9, 31, 188, 200, 106, 16, 252, 224, 226, 161, 174, 96, 50, 254, 134, 250, 22, 235, 37, 45, 78, 134, 98, 97, 183, 250, 235, 254, 16, 51, 134, 20, 92, 9, 230, 205, 180, 253, 99, 137, 119, 126, 68, 89, 248, 220, 36, 40, 93, 207, 213, 24, 234, 186, 187, 255, 115, 70, 149, 129, 195, 23, 132, 6, 120, 11, 204, 112, 171, 100, 206, 90, 44, 110, 10, 90, 253, 73, 196, 201, 141, 36, 252, 153, 47, 35, 191, 163, 55, 33, 32, 57, 192, 157, 62, 105, 97 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropColumn(
                name: "Industry",
                table: "Company");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "UserId",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 83, 202, 3, 155, 49, 125, 187, 177, 218, 10, 105, 82, 160, 68, 236, 103, 157, 212, 14, 178, 130, 119, 164, 55, 142, 207, 125, 86, 145, 73, 221, 15, 219, 249, 12, 54, 124, 214, 131, 140, 35, 221, 162, 249, 62, 93, 128, 242, 91, 87, 11, 149, 118, 148, 190, 101, 238, 135, 99, 98, 75, 233, 34, 18 }, new byte[] { 0, 191, 171, 40, 56, 115, 125, 3, 156, 132, 195, 198, 154, 134, 111, 213, 128, 212, 49, 226, 100, 212, 173, 194, 171, 117, 135, 109, 124, 68, 159, 255, 49, 52, 241, 85, 146, 28, 221, 118, 154, 145, 125, 189, 151, 72, 43, 88, 170, 131, 187, 81, 205, 180, 30, 20, 32, 121, 158, 84, 42, 89, 129, 188, 59, 213, 176, 206, 227, 18, 103, 191, 146, 165, 141, 250, 253, 193, 87, 157, 107, 195, 244, 130, 204, 6, 3, 178, 18, 41, 28, 62, 190, 214, 220, 23, 25, 53, 157, 127, 83, 174, 125, 51, 106, 28, 67, 10, 61, 88, 251, 8, 250, 143, 77, 18, 153, 214, 111, 225, 229, 237, 105, 118, 26, 173, 30, 213 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "UserId",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 11, 54, 233, 25, 88, 143, 40, 125, 104, 31, 189, 6, 216, 217, 127, 20, 31, 222, 255, 25, 52, 142, 72, 165, 100, 89, 235, 96, 255, 148, 176, 58, 139, 251, 250, 226, 144, 69, 182, 136, 201, 210, 190, 39, 213, 97, 120, 170, 110, 9, 207, 208, 142, 234, 230, 252, 163, 107, 183, 4, 108, 117, 10, 152 }, new byte[] { 158, 236, 164, 79, 129, 121, 17, 188, 212, 40, 225, 158, 115, 38, 6, 231, 188, 249, 161, 114, 226, 168, 33, 16, 162, 92, 204, 138, 167, 255, 26, 98, 94, 2, 20, 243, 219, 34, 46, 214, 170, 46, 121, 110, 31, 228, 147, 50, 161, 23, 231, 41, 131, 137, 133, 90, 178, 60, 167, 248, 23, 184, 231, 242, 250, 131, 97, 238, 206, 87, 78, 6, 38, 203, 159, 78, 12, 200, 224, 216, 172, 74, 73, 83, 57, 152, 112, 87, 160, 153, 27, 183, 159, 208, 206, 13, 201, 23, 12, 121, 206, 21, 115, 200, 75, 233, 209, 172, 69, 175, 215, 81, 89, 83, 23, 174, 90, 142, 189, 0, 227, 141, 93, 181, 31, 246, 91, 210 } });
        }
    }
}
