name: Test Coverage

on:
  push:
    branches:
      - main
      - develop
      - feat/**
      - fix/**
  pull_request:
    branches:
      - main
      - develop
      - feat/**
      - fix/**

jobs:
  test-and-coverage:
    runs-on: ubuntu-latest

    env:
      GH_SECRET_CONNECTIONSTRING: ${{ secrets.GH_SECRET_CONNECTIONSTRING }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Restore dependencies
        run: dotnet restore ./WebAPI.Tests/WebAPI.Tests.csproj

      - name: Run tests with coverage
        run: |
          dotnet test ./WebAPI.Tests/WebAPI.Tests.csproj \
            --collect:"XPlat Code Coverage" \
            -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.ExcludeByFile="**/Program.cs" \
            --logger "trx;LogFileName=TestResults/test-results.trx"

      - name: Install ReportGenerator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool

      - name: Generate HTML coverage report
        run: |
          reportgenerator \
            -reports:"**/coverage.cobertura.xml" \
            -targetdir:"coverage-report" \
            -reporttypes:Html

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: '**/test-results.trx'

      - name: Upload coverage report (cobertura)
        uses: actions/upload-artifact@v4
        with:
          name: cobertura-coverage
          path: '**/coverage.cobertura.xml'

      - name: Upload HTML coverage report
        uses: actions/upload-artifact@v4
        with:
          name: html-coverage-report
          path: coverage-report
